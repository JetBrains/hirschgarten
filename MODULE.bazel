module(
    name = "hirschgarten",
)

http_jar = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_jar")

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

bazel_dep(
    name = "rules_kotlin",
    version = "2.1.9",
)
single_version_override(
    module_name = "rules_kotlin",
    patch_strip = 1,
    patches = [
        "//rules_intellij/third_party/kotlin/patches:strip_stdlib.patch",
    ],
)

register_toolchains(
    "//:kotlin_toolchain",
)

# Required by rules_jvm_external since version 6.3
bazel_dep(name = "rules_license", version = "1.0.0")
bazel_dep(name = "rules_java", version = "8.14.0")
bazel_dep(name = "rules_jvm_external", version = "6.8")
bazel_dep(name = "aspect_rules_js", version = "2.5.0")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    data = ["//:package.json"],
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    public_hoist_packages = {
        "typescript-eslint": [""],
    },
    update_pnpm_lock = True,
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")

# Allows developers to use the matching pnpm version, for example:
# bazel run -- @pnpm --dir /home/runner/work/rules_js/rules_js install
use_repo(pnpm, "pnpm")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "com.fasterxml.jackson.core:jackson-databind:2.19.2",
        "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.19.2",
        "com.fasterxml.jackson.module:jackson-module-kotlin:2.19.2",
        "com.google.auto.value:auto-value-annotations:1.11.0",
        "com.google.auto.value:auto-value:1.11.0",
        "com.google.flogger:flogger:0.9",
        "com.google.flogger:flogger-system-backend:0.9",
        "com.googlecode.java-diff-utils:diffutils:1.3.0",
        "com.google.code.findbugs:jsr305:3.0.2",
        "com.google.code.gson:gson:2.13.1",
        "com.google.errorprone:error_prone_annotations:2.41.0",
        "com.google.guava:guava:33.3.1-jre",
        "com.google.truth:truth:1.4.4",
        "com.google.truth.extensions:truth-java8-extension:1.4.4",
        "com.google.j2objc:j2objc-annotations:3.0.0",
        "com.google.guava:failureaccess:1.0.3",
        "org.hamcrest:hamcrest-core:3.0",
        "org.jetbrains:annotations:26.0.2",
        "com.jetbrains.intellij.tools:ide-metrics-collector-starter:252.23892.409",
        "com.jetbrains.intellij.tools:ide-metrics-collector:252.23892.409",
        "com.jetbrains.intellij.tools:ide-starter-driver:252.23892.409",
        "com.jetbrains.intellij.tools:ide-starter-junit5:252.23892.409",
        "com.jetbrains.intellij.tools:ide-starter-squashed:252.23892.409",
        "commons-io:commons-io:jar:2.20.0",
        "io.grpc:grpc-protobuf:1.74.0",
        "io.grpc:grpc-stub:1.74.0",
        "io.kotest:kotest-assertions-api-jvm:5.9.1",
        "io.kotest:kotest-assertions-core-jvm:5.9.1",
        "io.kotest:kotest-assertions-shared-jvm:5.9.1",
        "io.kotest:kotest-common-jvm:5.9.1",
        "junit:junit:4.13.2",
        "org.opentest4j:opentest4j:1.3.0",
        "net.java.dev.jna:jna:5.17.0",
        "org.apache.httpcomponents:httpclient:4.5.14",
        "org.slf4j:slf4j-api:2.0.17",
        "org.apache.velocity:velocity-engine-core:2.4.1",
        "org.jetbrains.kotlin:kotlin-stdlib:2.2.0-RC2",
        "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0",
        "org.junit.jupiter:junit-jupiter:5.13.4",
        "org.junit.platform:junit-platform-console:1.13.4",
        "org.junit.platform:junit-platform-suite-api:1.13.4",
        "org.junit.platform:junit-platform-suite-engine:1.13.4",
        "org.kodein.di:kodein-di:7.26.1",
        "org.mockito:mockito-core:5.18.0",
        "com.github.javaparser:javaparser-core:3.27.0",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    generate_compat_repositories = True,
    known_contributing_modules = [
        "bazel_worker_java",
        "grpc-java",
        "hirschgarten",
    ],
    lock_file = "//:maven_install.json",
    repositories = [
        "https://cache-redirector.jetbrains.com/maven-central",
        "https://cache-redirector.jetbrains.com/intellij-dependencies",
        "https://www.jetbrains.com/intellij-repository/releases",
        "https://www.jetbrains.com/intellij-repository/snapshots",
    ],
)
maven.artifact(
    testonly = True,
    artifact = "junit-vintage-engine",
    group = "org.junit.vintage",
    version = "5.13.4",
)
maven.artifact(
    artifact = "kotlinx-coroutines-core",
    group = "org.jetbrains.kotlinx",
    neverlink = True,
    version = "1.10.2",
)
maven.artifact(
    artifact = "kotlinx-coroutines-core-jvm",
    group = "org.jetbrains.kotlinx",
    neverlink = True,
    version = "1.10.2",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-core",
    group = "org.jetbrains.kotlinx",
    version = "1.9.0",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-core-jvm",
    group = "org.jetbrains.kotlinx",
    version = "1.9.0",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-test",
    group = "org.jetbrains.kotlinx",
    version = "1.9.0",
)
use_repo(
    maven,
    "com_google_guava_failureaccess",
    "com_google_guava_guava",
    "com_google_j2objc_j2objc_annotations",
    "maven",
    "server_maven",
    auto_value = "com_google_auto_value_auto_value",
    auto_value_annotations = "com_google_auto_value_auto_value_annotations",
    diffutils = "com_googlecode_java_diff_utils_diffutils",
    error_prone_annotations = "com_google_errorprone_error_prone_annotations",
    flogger = "com_google_flogger_flogger",
    flogger_system_backend = "com_google_flogger_flogger_system_backend",
    gson = "com_google_code_gson_gson",
    hamcrest = "org_hamcrest_hamcrest_core",
    jetbrains_annotations = "org_jetbrains_annotations",
    jna = "net_java_dev_jna_jna",
    jsr305_annotations = "com_google_code_findbugs_jsr305",
    junit = "junit_junit",
    mockito = "org_mockito_mockito_core",
    truth = "com_google_truth_truth",
    truth8 = "com_google_truth_extensions_truth_java8_extension",
)

bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "aspect_bazel_lib", version = "2.20.0")
bazel_dep(name = "googleapis-java", version = "1.0.0")
bazel_dep(name = "googleapis-grpc-java", version = "1.0.0")
bazel_dep(name = "googleapis", version = "0.0.0-20250730-f6801ce4")

switched_rules = use_extension("@googleapis//:extensions.bzl", "switched_rules")
switched_rules.use_languages(
    grpc = True,
    java = True,
)

bazel_dep(name = "rules_apple", version = "3.20.1")

# Needed because googleapis transitively pulls in a broken version
single_version_override(
    module_name = "rules_apple",
    version = "3.17.1",
)

bazel_dep(name = "rules_shell", version = "0.6.0")
bazel_dep(name = "rules_proto", version = "7.1.0")
bazel_dep(name = "protobuf", version = "29.5")
bazel_dep(name = "rules_cc", version = "0.2.0")
bazel_dep(name = "rules_python", version = "1.5.3")
bazel_dep(name = "platforms", version = "1.0.0")

# Needed for codecanvas
python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency = True)
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

bazel_dep(
    name = "aspect_rules_lint",
    dev_dependency = True,
)
single_version_override(
    module_name = "aspect_rules_lint",
    patch_strip = 1,
    patches = [
        "tools/format/use-ktlint.patch",
    ],
    version = "1.6.0",
)

http_jar(
    name = "ktlint",
    integrity = "sha256-tZagXwk2ThmXtkQVJoOvEv71iUTzrPq994Bx9aSQ65g=",
    url = "https://github.com/pinterest/ktlint/releases/download/1.7.1/ktlint",
)

http_jar(
    name = "google_java_format",
    integrity = "sha256-MjQufBtGAPgN80cdpGrugBLT4URdXqG+H7cSibB8xzU=",
    url = "https://github.com/google/google-java-format/releases/download/v1.28.0/google-java-format-1.28.0-all-deps.jar",
)

bazel_dep(
    name = "buildifier_prebuilt",
    version = "8.2.0.2",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_buf",
    version = "0.4.0",
    dev_dependency = True,
)

bazel_dep(
    name = "stardoc",
    version = "0.8.0",
)

buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")
use_repo(buf, "rules_buf_toolchains")

bazel_dep(
    name = "rules_bazel_integration_test",
    version = "0.33.2",
    dev_dependency = True,
)

bazel_binaries = use_extension(
    "@rules_bazel_integration_test//:extensions.bzl",
    "bazel_binaries",
    dev_dependency = True,
)
bazel_binaries.download(version = "8.0.0")
bazel_binaries.download(version = "7.4.0")
bazel_binaries.download(version = "6.4.0")
use_repo(
    bazel_binaries,
    "bazel_binaries",
    "bazel_binaries_bazelisk",
    "build_bazel_bazel_6_4_0",
    "build_bazel_bazel_7_4_0",
    "build_bazel_bazel_8_0_0",
)

# IJ SDK

# Any SDK version

DEVKIT_BUILD_FILE = """
java_import(
    name = "devkit",
    jars = ["devkit/lib/devkit.jar"],
    visibility = ["//visibility:public"],
)
"""

_PYTHON_CE_BUILD_FILE = """
java_import(
    name = "python",
    jars = glob(["python-ce/lib/*.jar"]),
    visibility = ["//visibility:public"],
)
filegroup(
  name = "python_helpers",
  srcs = glob(["python-ce/helpers/**/*"]),
  visibility = ["//visibility:public"],
)
"""

_GO_BUILD_FILE = """
java_import(
    name = "go",
    jars = glob(["go-plugin/lib/*.jar", "go-plugin/lib/modules/*.jar"]),
    visibility = ["//visibility:public"],
)
"""

_PROTOEDIT_BUILD_FILE = """
java_import(
    name = "protoedit",
    jars = glob(["protoeditor/lib/*.jar"]),
    visibility = ["//visibility:public"],
)
"""

# SDK 251

SDK_251_PLUGIN_REPOSITORY_VERSION = "251.23774.435"

SDK_251_INTELLIJ_REPOSITORY_VERSION = "251.23774.435"

SDK_251_INTELLIJ_REPOSITORY = "releases"  # releases or snapshots

IC_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/idea/ideaIC/%s/ideaIC-%s.zip" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

IC_251_SHA = "799cdefa47aa213c166b2883f5a020053a60a9263727aee1f12d98475e277e47"

http_archive(
    name = "intellij_ce_2025_1",
    build_file = "//rules_intellij/intellij_platform_sdk:BUILD.idea251",
    sha256 = IC_251_SHA,
    url = IC_251_URL,
)

IC_251_SOURCES_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/idea/ideaIC/%s/ideaIC-%s-sources.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

IC_251_SOURCES_SHA = "3f07824aa6f19f6533ea3f140b5f6e0a3ece1089e8a43ca22b4c2ce24ddcf511"

http_jar(
    name = "intellij_ce_2025_1_sources",
    sha256 = IC_251_SOURCES_SHA,
    url = IC_251_SOURCES_URL,
)

# DEVKIT_251_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/DevKit/%s/DevKit-%s.zip" % (SDK_251_PLUGIN_REPOSITORY_VERSION, SDK_251_PLUGIN_REPOSITORY_VERSION)
DEVKIT_251_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/DevKit/251.23774.460/DevKit-251.23774.460.zip"

DEVKIT_251_SHA = "3417717e56a089b84616e743f3e7c88ea22cfd3acbac33dfa0d381f2a8ee8376"

http_archive(
    name = "devkit_2025_1",
    build_file_content = DEVKIT_BUILD_FILE,
    sha256 = DEVKIT_251_SHA,
    url = DEVKIT_251_URL,
)

PYTHON_PLUGIN_251_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/PythonCore/%s/PythonCore-%s.zip" % (SDK_251_PLUGIN_REPOSITORY_VERSION, SDK_251_PLUGIN_REPOSITORY_VERSION)

PYTHON_PLUGIN_251_SHA = "361d6c2cac7b47b97eb19f900ed7dd5de5220f4cc96da85b853c706749fa9e1d"

http_archive(
    name = "python_2025_1",
    build_file_content = _PYTHON_CE_BUILD_FILE,
    sha256 = PYTHON_PLUGIN_251_SHA,
    url = PYTHON_PLUGIN_251_URL,
)

GO_PLUGIN_251_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/org.jetbrains.plugins.go/%s/org.jetbrains.plugins.go-%s.zip" % (SDK_251_PLUGIN_REPOSITORY_VERSION, SDK_251_PLUGIN_REPOSITORY_VERSION)

GO_PLUGIN_251_SHA = "d6455605c57ccd0859af871f902e68db3078542c48d6d099327e36d80983683e"

http_archive(
    name = "go_2025_1",
    build_file_content = _GO_BUILD_FILE,
    sha256 = GO_PLUGIN_251_SHA,
    url = GO_PLUGIN_251_URL,
)

PERFORMANCE_PLUGIN_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/performanceTesting/performance-testing/%s/performance-testing-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

PERFORMANCE_PLUGIN_251_SHA = "4e2f499001e057de897ce6b23e0f98134330e9416e62569c6ca1f1ae774c6204"

http_jar(
    name = "performance_2025_1",
    sha256 = PERFORMANCE_PLUGIN_251_SHA,
    url = PERFORMANCE_PLUGIN_251_URL,
)

CODE_WITH_ME_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/platform/backend-split/%s/backend-split-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

CODE_WITH_ME_251_SHA = "edb7ed3b981c0155edb13b02cba2a5b158ded3ffa7f1d5f8b475139c91761277"

http_jar(
    name = "code_with_me_2025_1",
    sha256 = CODE_WITH_ME_251_SHA,
    url = CODE_WITH_ME_251_URL,
)

JSON_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/json/json/%s/json-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

JSON_251_SHA = "c811f8b6db73f626a3ebc086d80110cf25971623170bed8f68e06a6d70142625"

http_jar(
    name = "json_2025_1",
    sha256 = JSON_251_SHA,
    url = JSON_251_URL,
)

JSON_SPLIT_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/json/json-split/%s/json-split-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

JSON_SPLIT_251_SHA = "4946586e8166d18581fb885683d97bc11cdde76c1ba01468bcaea0107a9062bf"

http_jar(
    name = "json_split_2025_1",
    sha256 = JSON_SPLIT_251_SHA,
    url = JSON_SPLIT_251_URL,
)

TOML_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/toml/toml/%s/toml-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

TOML_251_SHA = "aeb1545dce39866f3e6a9299eee4fea4e1f1db3054928e2bde9baac63312fac1"

http_jar(
    name = "toml_2025_1",
    sha256 = TOML_251_SHA,
    url = TOML_251_URL,
)

TOML_CORE_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/toml/toml-core/%s/toml-core-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

TOML_CORE_251_SHA = "f5474fe1ad14297ec78777f7860ef1bcf19ca772d3c4f99fb372c9405e930368"

http_jar(
    name = "toml_core_2025_1",
    sha256 = TOML_CORE_251_SHA,
    url = TOML_CORE_251_URL,
)

TOML_JSON_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/toml/toml-json/%s/toml-json-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

TOML_JSON_251_SHA = "21408052034a3f07bed720c6b22b8eae92ff22ba67098af0b88a9a4ff9e99c49"

http_jar(
    name = "toml_json_2025_1",
    sha256 = TOML_JSON_251_SHA,
    url = TOML_JSON_251_URL,
)

TOML_GRAZIE_251_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/toml/toml-grazie/%s/toml-grazie-%s.jar" % (SDK_251_INTELLIJ_REPOSITORY, SDK_251_INTELLIJ_REPOSITORY_VERSION, SDK_251_INTELLIJ_REPOSITORY_VERSION)

TOML_GRAZIE_251_SHA = "8290081a7fd111cfcf978da9f2d7255a28b903379e8e66e45fbf0d38cb6c5e2d"

http_jar(
    name = "toml_grazie_2025_1",
    sha256 = TOML_GRAZIE_251_SHA,
    url = TOML_GRAZIE_251_URL,
)

_TERMINAL_BUILD_FILE = """
java_import(
   name = "terminal",
   jars = glob(["terminal/lib/*.jar"]),
   visibility = ["//visibility:public"],
)
"""

_TERMINAL_251_VERSION = "251.25410.123"

TERMINAL_PLUGIN_251_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/org.jetbrains.plugins.terminal/%s/org.jetbrains.plugins.terminal-%s.zip" % (_TERMINAL_251_VERSION, _TERMINAL_251_VERSION)

http_archive(
    name = "terminal_2025_1",
    build_file_content = _TERMINAL_BUILD_FILE,
    url = TERMINAL_PLUGIN_251_URL,
)

PROTOEDIT_PLUGIN_251_VERSION = "251.27812.12"

PROTOEDIT_PLUGIN_251_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/idea.plugin.protoeditor/%s/idea.plugin.protoeditor-%s.zip" % (PROTOEDIT_PLUGIN_251_VERSION, PROTOEDIT_PLUGIN_251_VERSION)

PROTOEDIT_PLUGIN_251_SHA = "9430bddfff42e03556b67e340080fb5356de8fe6eefbc02554f4638840680b8e"

http_archive(
    name = "protoedit_2025_1",
    build_file_content = _PROTOEDIT_BUILD_FILE,
    sha256 = PROTOEDIT_PLUGIN_251_SHA,
    url = PROTOEDIT_PLUGIN_251_URL,
)

# SDK 252

SDK_252_PLUGIN_REPOSITORY_VERSION = "252.25557.77"

SDK_252_INTELLIJ_REPOSITORY_VERSION = "252.25557.77-EAP-SNAPSHOT"

SDK_252_INTELLIJ_REPOSITORY = "snapshots"  # releases or snapshots

IC_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/idea/ideaIC/%s/ideaIC-%s.zip" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

IC_252_SHA = "363ef5c9342156ea57492dc1be82c539a637e690bdcdbb2bc53bb2fd11d76b3e"

http_archive(
    name = "intellij_ce_2025_2",
    build_file = "//rules_intellij/intellij_platform_sdk:BUILD.idea252",
    sha256 = IC_252_SHA,
    url = IC_252_URL,
)

IC_252_SOURCES_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/idea/ideaIC/%s/ideaIC-%s-sources.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

IC_252_SOURCES_SHA = "25e71bef552411f2e9b77d7e03bf504b66b698e9548653afba9c59098a77c500"

http_jar(
    name = "intellij_ce_2025_2_sources",
    sha256 = IC_252_SOURCES_SHA,
    url = IC_252_SOURCES_URL,
)

DEVKIT_252_VERSION = "252.25557.23"

DEVKIT_252_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/DevKit/%s/DevKit-%s.zip" % (DEVKIT_252_VERSION, DEVKIT_252_VERSION)

DEVKIT_252_SHA = "4f22dd75aa675b25008653079310b3fc32160130227b697dd69b6c5e32c13aa2"

http_archive(
    name = "devkit_2025_2",
    build_file_content = DEVKIT_BUILD_FILE,
    sha256 = DEVKIT_252_SHA,
    url = DEVKIT_252_URL,
)

SDK_252_PYTHON_VERSION = "252.23892.409"

PYTHON_PLUGIN_252_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/PythonCore/%s/PythonCore-%s.zip" % (SDK_252_PYTHON_VERSION, SDK_252_PYTHON_VERSION)

PYTHON_PLUGIN_252_SHA = "601bb32a9f7a78f1e801b870c5922e6c154e753c7735fd2ae50bc0f4587aa4d5"

http_archive(
    name = "python_2025_2",
    build_file_content = _PYTHON_CE_BUILD_FILE,
    sha256 = PYTHON_PLUGIN_252_SHA,
    url = PYTHON_PLUGIN_252_URL,
)

GO_PLUGIN_252_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/org.jetbrains.plugins.go/%s/org.jetbrains.plugins.go-%s.zip" % (SDK_252_PLUGIN_REPOSITORY_VERSION, SDK_252_PLUGIN_REPOSITORY_VERSION)

GO_PLUGIN_252_SHA = "f0990da5d858954d33e1058a30a04eef77c3e9c8ff2035c52dd636bc1d8016e1"

http_archive(
    name = "go_2025_2",
    build_file_content = _GO_BUILD_FILE,
    sha256 = GO_PLUGIN_252_SHA,
    url = GO_PLUGIN_252_URL,
)

PERFORMANCE_PLUGIN_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/performanceTesting/performance-testing/%s/performance-testing-%s.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

PERFORMANCE_PLUGIN_252_SHA = "b736e55c294a3a9b703e414d6a4ec5311a53219fac37213ba3946180fc4aad66"

http_jar(
    name = "performance_2025_2",
    sha256 = PERFORMANCE_PLUGIN_252_SHA,
    url = PERFORMANCE_PLUGIN_252_URL,
)

CODE_WITH_ME_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/platform/backend-split/%s/backend-split-%s.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

CODE_WITH_ME_252_SHA = "321a0bd455e28876f7b18dc3d298f304cd7e5ebaa382ef7d72aa3f7b0f3ca10c"

http_jar(
    name = "code_with_me_2025_2",
    sha256 = CODE_WITH_ME_252_SHA,
    url = CODE_WITH_ME_252_URL,
)

CODE_WITH_ME_SPLIT_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/platform/split/%s/split-%s.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

CODE_WITH_ME_SPLIT_252_SHA = "e9e5104ebb03fe61eea932a78c1639db50dc7c744b47eb705993599689da241e"

http_jar(
    name = "code_with_me_split_2025_2",
    sha256 = CODE_WITH_ME_SPLIT_252_SHA,
    url = CODE_WITH_ME_SPLIT_252_URL,
)

JSON_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/json/json/%s/json-%s.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

JSON_252_SHA = "ae08c35e9faa3fd020959ee243be632a2bf375526a0ac6fb63b17424124f860a"

http_jar(
    name = "json_2025_2",
    sha256 = JSON_252_SHA,
    url = JSON_252_URL,
)

JSON_SPLIT_252_URL = JSON_SPLIT_251_URL

JSON_SPLIT_252_SHA = JSON_SPLIT_251_SHA

http_jar(
    name = "json_split_2025_2",
    sha256 = JSON_SPLIT_252_SHA,
    url = JSON_SPLIT_252_URL,
)

# From 252 python plugin requires toml plugin to be loaded
TOML_PLUGIN_252_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/org.toml.lang/%s/org.toml.lang-%s.zip" % (SDK_252_PYTHON_VERSION, SDK_252_PYTHON_VERSION)

TOML_PLUGIN_252_SHA = "32d9bfff88947bc1a7b630368ddc7a7f099462815bd69dafc58722e8ada3cdf2"

_TOML_BUILD_FILE = """
java_import(
    name = "toml",
    jars = glob(["toml/lib/toml.jar", "toml/lib/modules/*.jar"]),
    visibility = ["//visibility:public"],
)
"""

http_archive(
    name = "toml_plugin_2025_2",
    build_file_content = _TOML_BUILD_FILE,
    sha256 = TOML_PLUGIN_252_SHA,
    url = TOML_PLUGIN_252_URL,
)

TERMINAL_PLUGIN_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/terminal/terminal/%s/terminal-%s.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

http_jar(
    name = "terminal_2025_2",
    url = TERMINAL_PLUGIN_252_URL,
)

TERMINAL_COMPLETION_PLUGIN_252_URL = "https://www.jetbrains.com/intellij-repository/%s/com/jetbrains/intellij/terminal/terminal-completion/%s/terminal-completion-%s.jar" % (SDK_252_INTELLIJ_REPOSITORY, SDK_252_INTELLIJ_REPOSITORY_VERSION, SDK_252_INTELLIJ_REPOSITORY_VERSION)

http_jar(
    name = "terminal_completion_2025_2",
    url = TERMINAL_COMPLETION_PLUGIN_252_URL,
)

# protobuf plugin
PROTOEDIT_PLUGIN_252_VERSION = "252.23892.201"

PROTOEDIT_PLUGIN_252_URL = "https://plugins.jetbrains.com/maven/com/jetbrains/plugins/idea.plugin.protoeditor/%s/idea.plugin.protoeditor-%s.zip" % (PROTOEDIT_PLUGIN_252_VERSION, PROTOEDIT_PLUGIN_252_VERSION)

PROTOEDIT_PLUGIN_252_SHA = "0deea649899098a7b12e37aeba826a5d7658684dbc130634e0ca9bd3c94e0478"

http_archive(
    name = "protoedit_2025_2",
    build_file_content = _PROTOEDIT_BUILD_FILE,
    sha256 = PROTOEDIT_PLUGIN_252_SHA,
    url = PROTOEDIT_PLUGIN_252_URL,
)
