module(
    name = "hirschgarten",
)

http_jar = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_jar")

bazel_dep(
    name = "rules_intellij",
)
local_path_override(
    module_name = "rules_intellij",
    path = "rules_intellij",
)

bazel_dep(name = "rules_kotlin", version = "1.9.6")

register_toolchains(
    "//:kotlin_toolchain",
)

bazel_dep(name = "rules_java", version = "7.9.1")
bazel_dep(name = "rules_jvm_external", version = "6.2")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "ch.epfl.scala:bsp4j:2.2.0-M2",
        "com.fasterxml.jackson.core:jackson-databind:2.17.2",
        "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.2",
        "com.fasterxml.jackson.module:jackson-module-kotlin:2.17.2",
        "com.google.code.gson:gson:2.10.1",
        "com.google.guava:guava:31.0.1-jre",
        "com.google.protobuf:protobuf-java:4.28.0",
        "com.jetbrains.intellij.tools:ide-metrics-collector-starter:242.21829.40-EAP-SNAPSHOT",
        "com.jetbrains.intellij.tools:ide-metrics-collector:242.21829.40-EAP-SNAPSHOT",
        "com.jetbrains.intellij.tools:ide-starter-junit5:242.21829.40-EAP-SNAPSHOT",
        "com.jetbrains.intellij.tools:ide-starter-squashed:242.21829.40-EAP-SNAPSHOT",
        "commons-cli:commons-cli:jar:1.9.0",
        "commons-io:commons-io:jar:2.16.1",
        "io.grpc:grpc-protobuf:1.66.0",
        "io.grpc:grpc-stub:1.66.0",
        "io.kotest:kotest-assertions-api-jvm:5.9.1",
        "io.kotest:kotest-assertions-core-jvm:5.9.1",
        "io.kotest:kotest-assertions-shared-jvm:5.9.1",
        "io.kotest:kotest-common-jvm:5.9.1",
        "io.opentelemetry.semconv:opentelemetry-semconv:1.25.0-alpha",
        "io.opentelemetry:opentelemetry-api:1.41.0",
        "io.opentelemetry:opentelemetry-exporter-otlp:1.41.0",
        "io.opentelemetry:opentelemetry-extension-kotlin:1.41.0",
        "io.opentelemetry:opentelemetry-sdk-trace:1.41.0",
        "io.opentelemetry:opentelemetry-sdk:1.41.0",
        "net.java.dev.jna:jna:5.14.0",
        "org.apache.httpcomponents:httpclient:4.5.14",
        "org.apache.logging.log4j:log4j-api:2.23.1",
        "org.apache.logging.log4j:log4j-core:2.23.1",
        "org.apache.velocity:velocity-engine-core:2.3",
        "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.2",
        "org.junit.jupiter:junit-jupiter:5.11.0",
        "org.junit.platform:junit-platform-console:1.11.0",
        "org.junit.platform:junit-platform-suite-api:1.11.0",
        "org.junit.platform:junit-platform-suite-engine:1.11.0",
        "org.kodein.di:kodein-di:7.22.0",
        "org.scala-lang:scala-library:2.13.14",
    ],
    fail_if_repin_required = True,
    generate_compat_repositories = True,
    lock_file = "//:maven_install.json",
    repositories = [
        "https://cache-redirector.jetbrains.com/maven-central",
        "https://cache-redirector.jetbrains.com/intellij-dependencies",
        "https://www.jetbrains.com/intellij-repository/releases",
        "https://www.jetbrains.com/intellij-repository/snapshots",
    ],
)
maven.artifact(
    artifact = "kotlinx-coroutines-core",
    group = "org.jetbrains.kotlinx",
    neverlink = True,
    version = "1.8.1",
)
maven.artifact(
    artifact = "kotlinx-coroutines-core-jvm",
    group = "org.jetbrains.kotlinx",
    neverlink = True,
    version = "1.8.1",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-core",
    group = "org.jetbrains.kotlinx",
    version = "1.8.1",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-core-jvm",
    group = "org.jetbrains.kotlinx",
    version = "1.8.1",
)
maven.artifact(
    name = "server_maven",
    artifact = "kotlinx-coroutines-test",
    group = "org.jetbrains.kotlinx",
    version = "1.8.1",
)
use_repo(
    maven,
    "maven",
    "server_maven",
    # TODO: also should not be required
    jna = "net_java_dev_jna_jna",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")

# Required until Bazel repo upstreams it's rules_jvm_external fix and there's a new release
BAZEL_BEP_VERSION = "5.4.1"

http_jar(
    name = "bazel_bep",
    integrity = "sha256-z7XAsDOW3Ha8zrcg1ZP/8+7Azg4MNzUFQAtUBvjl75U=",
    url = "https://github.com/agluszak/bazel-bep-proto/releases/download/%s/bazel-bep-protobuf.jar" % BAZEL_BEP_VERSION,
)

bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_python", version = "0.35.0")

# Needed for codecanvas
python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency = True)
python.toolchain(
    ignore_root_user_error = True,
    is_default = True,
    python_version = "3.12",
)

bazel_dep(
    name = "bsp-testkit2",
    dev_dependency = True,
    repo_name = "testkit",
)
git_override(
    module_name = "bsp-testkit2",
    commit = "a5cf4603d01b0835acf28fabee201ffb22f28b2a",
    remote = "https://github.com/build-server-protocol/bsp-testkit2.git",
)

bazel_dep(
    name = "aspect_rules_lint",
    dev_dependency = True,
)
single_version_override(
    module_name = "aspect_rules_lint",
    patch_strip = 1,
    patches = [
        "tools/format/use-ktlint.patch",
    ],
    version = "1.0.0-rc6",
)

http_jar(
    name = "ktfmt",
    url = "https://repo1.maven.org/maven2/com/facebook/ktfmt/0.51/ktfmt-0.51-jar-with-dependencies.jar",
)

http_jar(
    name = "ktlint",
    url = "https://github.com/pinterest/ktlint/releases/download/1.3.1/ktlint",
)

http_jar(
    name = "google_java_format",
    url = "https://github.com/google/google-java-format/releases/download/v1.22.0/google-java-format-1.22.0-all-deps.jar",
)

bazel_dep(
    name = "buildifier_prebuilt",
    version = "7.3.1",
    dev_dependency = True,
)
bazel_dep(
    name = "rules_buf",
    version = "0.3.0",
    dev_dependency = True,
)

buf = use_extension("@rules_buf//buf:extensions.bzl", "buf")
use_repo(buf, "rules_buf_toolchains")

bazel_dep(
    name = "rules_bazel_integration_test",
    version = "0.25.0",
    dev_dependency = True,
)

bazel_binaries = use_extension(
    "@rules_bazel_integration_test//:extensions.bzl",
    "bazel_binaries",
    dev_dependency = True,
)

# test project are too old for bazel 7
# bazel_binaries.download(version_file = "//:.bazelversion")
bazel_binaries.download(version = "7.1.2")
bazel_binaries.download(version = "6.4.0")
bazel_binaries.download(version = "5.3.2")
use_repo(
    bazel_binaries,
    "bazel_binaries",
    "bazel_binaries_bazelisk",
    # test project are too old for bazel 7
    #     "build_bazel_bazel_.bazelversion",
    "build_bazel_bazel_5_3_2",
    "build_bazel_bazel_6_4_0",
    "build_bazel_bazel_7_1_2",
)
