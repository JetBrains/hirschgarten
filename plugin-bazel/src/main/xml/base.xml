<idea-plugin>
    <!-- Do NOT put <id> and <name> here, it will be provided by the xml generated by rules_intellij -->
    <!-- which will be merged with this one -->
    <vendor>JetBrains</vendor>
    <extensionPoints>
        <extensionPoint qualifiedName="org.jetbrains.bazel.sourceTypeIconProvider"
                        interface="org.jetbrains.bazel.utils.SourceTypeIconProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.scalaSdkExtension"
                        interface="org.jetbrains.bazel.scala.sdk.ScalaSdkExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.androidSdkGetterExtension"
                        interface="org.jetbrains.bazel.android.AndroidSdkGetterExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.androidFacetEntityUpdaterExtension"
                        interface="org.jetbrains.bazel.magicmetamodel.impl.workspacemodel.impl.updaters.AndroidFacetEntityUpdaterExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.runHandlerProvider"
                        interface="org.jetbrains.bazel.run.RunHandlerProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectAwareExtension"
                        interface="org.jetbrains.bazel.projectAware.ProjectAwareExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.connectionDetailsProviderExtension"
                        interface="org.jetbrains.bazel.server.connection.ConnectionDetailsProviderExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.connectionDetailsProviderExtensionJavaShim"
                        interface="org.jetbrains.bazel.server.connection.ConnectionDetailsProviderExtensionJavaShim"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.toolWindowConfigFileProviderExtension"
                        interface="org.jetbrains.bazel.extensionPoints.ToolWindowConfigFileProviderExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectModelExternalSource"
                        interface="org.jetbrains.bazel.extensionPoints.ProjectModelExternalSourceExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.runConfigurationExtension"
                        interface="org.jetbrains.bazel.run.config.RunConfigurationExtensionManager"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.invalidTargetsProviderExtension"
                        interface="org.jetbrains.bazel.services.InvalidTargetsProviderExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectSyncHook"
                        interface="org.jetbrains.bazel.sync.ProjectSyncHook"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectPreSyncHook"
                        interface="org.jetbrains.bazel.sync.ProjectPreSyncHook"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectPostSyncHook"
                        interface="org.jetbrains.bazel.sync.ProjectPostSyncHook"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectStructureProvider"
                        interface="org.jetbrains.bazel.sync.projectStructure.ProjectStructureProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.featureFlagsProvider"
                        interface="org.jetbrains.bazel.config.FeatureFlagsProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.additionalProjectTaskRunnerProvider"
                        interface="org.jetbrains.bazel.buildTask.AdditionalProjectTaskRunnerProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.treeStructureSettingsExtension"
                        interface="org.jetbrains.bazel.ui.projectTree.TreeStructureSettingsProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.jvmBinaryJarsExtension"
                        interface="org.jetbrains.bazel.extensionPoints.JvmBinaryJarsExtension"
                        dynamic="true"/>
    </extensionPoints>

    <extensions defaultExtensionNs="org.jetbrains.bazel">
        <runHandlerProvider implementation="org.jetbrains.bazel.jvm.run.JvmBspRunHandler$JvmBspRunHandlerProvider"
                            id="JvmRunHandlerProvider"/>
        <runHandlerProvider
                implementation="org.jetbrains.bazel.jvm.run.JvmBspTestHandler$JvmBspTestHandlerProvider"
                id="JvmTestHandlerProvider"/>
        <runHandlerProvider implementation="org.jetbrains.bazel.run.handler.GenericBspRunHandlerProvider"
                            order="last"/>
        <runHandlerProvider implementation="org.jetbrains.bazel.run.handler.GenericBspTestHandlerProvider"
                            order="last"/>
        <projectSyncHook implementation="org.jetbrains.bazel.jvm.sync.JvmSyncHook"/>
        <projectStructureProvider
                implementation="org.jetbrains.bazel.sync.projectStructure.workspaceModel.WorkspaceModelProjectStructureProvider"/>
        <featureFlagsProvider implementation="org.jetbrains.bazel.config.DefaultBspFeatureFlagsProvider"/>
        <sourceTypeIconProvider implementation="org.jetbrains.bazel.java.JavaSourceTypeIconProvider"/>
        <sourceTypeIconProvider implementation="org.jetbrains.bazel.kotlin.KotlinSourceTypeIconProvider"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">

        <activityTracker implementation="org.jetbrains.bazel.startup.BspStartupActivityTracker"/>

        <projectService serviceInterface="com.intellij.openapi.project.BaseProjectDirectories"
                        serviceImplementation="org.jetbrains.bazel.services.BspBaseProjectDirectories"
                        overrides="true"/>
        <projectService serviceInterface="com.intellij.codeInsight.ExternalAnnotationsManager"
                        serviceImplementation="org.jetbrains.bazel.services.BspExternalAnnotationsManager"
                        overrides="true"/>
        <moduleService serviceInterface="com.intellij.openapi.roots.ModuleFileIndex"
                       serviceImplementation="org.jetbrains.bazel.services.BspModuleFileIndex"
                       overrides="true"/>

        <commandLineInspectionProjectConfigurator
                implementation="org.jetbrains.bazel.startup.BspCommandLineInspectionConfigurator"/>
        <configurationType implementation="org.jetbrains.bazel.run.config.BspRunConfigurationType"/>

        <notificationGroup id="Bazel" displayType="STICKY_BALLOON"/>

        <workspaceModel.fileIndexContributor
                implementation="org.jetbrains.bazel.workspace.BspProjectDirectoriesWorkspaceFileIndexContributor"/>
        <!--        <workspaceModel.fileIndexContributor-->
        <!--                implementation="org.jetbrains.bazel.workspace.DummyModuleExclusionWorkspaceFileIndexContributor"/>-->
        <fileTypeOverrider
                implementation="org.jetbrains.bazel.workspace.DummyModuleSourcePlainTextTypeOverrider"/>
        <fileType name="BSP_PLAIN_TEXT"
                  language="TEXT"
                  implementationClass="org.jetbrains.bazel.workspace.BspPlainTextFileType"
                  fieldName="INSTANCE"/>
        <workspaceModel.fileIndexContributor
                implementation="org.jetbrains.bazel.workspace.CompiledSourceCodeInsideJarExcludeWorkspaceFileIndexContributor"/>

        <java.programPatcher implementation="org.jetbrains.bazel.jvm.run.BspJvmEnvironmentProgramPatcher"/>
        <java.elementFinder implementation="org.jetbrains.bazel.services.GeneratedClassFinder"/>

        <postStartupActivity
                implementation="org.jetbrains.bazel.startup.BspStartupActivity"/>

        <treeStructureProvider implementation="org.jetbrains.bazel.ui.projectTree.BspTreeStructureProvider"/>
        <projectViewNodeDecorator
                implementation="org.jetbrains.bazel.ui.projectTree.BspProjectViewNodeDecorator"/>
        <projectTaskRunner
                implementation="org.jetbrains.bazel.buildTask.BspProjectTaskRunner"/>
        <programRunner implementation="org.jetbrains.bazel.jvm.run.BspJvmDebugRunner"/>

        <directoryProjectConfigurator
                implementation="org.jetbrains.bazel.flow.open.CounterPlatformProjectConfigurator"
                order="last"/>

        <!--    <projectService serviceInterface="com.intellij.openapi.roots.SingleFileSourcesTracker"-->
        <!--                    serviceImplementation="org.jetbrains.bazel.services.SingleFileSourcesTrackerImpl"-->
        <!--                    overrides="true"/>-->

        <runLineMarkerContributor
                implementationClass="org.jetbrains.bazel.jvm.ui.gutters.BspJVMRunLineMarkerContributor"
                language="JVM"/>
        <registryKey defaultValue="true" description="Choose default connection"
                     key="bsp.build.project.on.sync"/>
        <registryKey defaultValue="false" description="Python modules support" key="bsp.python.support"/>
        <registryKey defaultValue="false" description="Enable JPS compilation" key="bsp.jps.compilation.enable"/>
        <registryKey defaultValue="false" description="Android modules support" key="bsp.android.support"/>
        <registryKey defaultValue="false" description="Go modules support" key="bsp.go.support"/>
        <registryKey defaultValue="true"
                     description="Shorten module/library names by hashing the first parts and retaining the others"
                     key="bsp.shorten.module.library.names"/>
        <registryKey defaultValue="false"
                     description="Retrieve targets for file from its ancestors"
                     key="bsp.retrieve.targets.for.file.from.ancestors"/>
        <registryKey defaultValue="false"
                     description="Wrap libraries inside modules to form a proper dependency graph between libraries. Enabled by default with K2 mode"
                     key="bsp.wrap.libraries.inside.modules"/>
        <registryKey defaultValue="false"
                     description="Enable phased sync. Phased sync consists of multiple steps, making code available sooner with limited dependency resolution"
                     key="bsp.use.phased.sync"/>
        <registryKey defaultValue="true"
                     description="Execute second phase of the phased sync. `bsp.use.phased.sync` has to be enabled to use this flag. It should be used only for testing purposes."
                     key="bsp.execute.second.phase.on.sync"/>
        <registryKey defaultValue="true"
                     description="Add the so-called &quot;dummy&quot; modules to make Java resolve work correctly."
                     key="bsp.add.dummy.modules"/>
        <registryKey defaultValue="true"
                     description="Exclude class files inside jars (and source files inside source jars) if they match up with a source file in the current project."
                     key="bsp.exclude.compiled.source.code.inside.jars"/>
        <!-- https://youtrack.jetbrains.com/issue/BAZEL-1734 -->
        <registryKey defaultValue="false"
                     description="Enable partial sync action for a target."
                     key="bsp.enable.partial.sync"/>

        <statusBarWidgetFactory id="BspFileTargetsWidget"
                                implementation="org.jetbrains.bazel.ui.widgets.fileTargets.BspFileTargetsWidgetFactory"/>

        <toolWindowAllowlist id="BSP"/>
        <toolWindowExtractor
                implementation="org.jetbrains.bazel.ui.widgets.tool.window.all.targets.BspToolWindowViewModelExtractor"/>

        <consoleFilterProvider
                implementation="org.jetbrains.bazel.ui.console.filter.AbsoluteAndRelativePathsConsoleFilterProvider"/>

        <iconMapper mappingFile="BSPIconMappings.json"/>

        <notificationGroup displayType="BALLOON" id="BSP Plugin"/>
        <editorNotificationProvider
                implementation="org.jetbrains.bazel.ui.notifications.BuildAndResyncOnUnresolvedImportNotificationsProvider"/>
    </extensions>

    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <projectConfigurator
                implementation="org.jetbrains.bazel.kotlin.BspKotlinProjectConfigurator"
                order="first"
        />

        <!--suppress PluginXmlValidity -->
        <supportsKotlinPluginMode supportsK2="true"/>

        <!-- this is left for backward-compatibility with the first versions of 242,
        it can be removed later -->
        <!--suppress PluginXmlValidity -->
        <supportsKotlinK2Mode/>
    </extensions>

    <actions>
        <action class="org.jetbrains.bazel.ui.projectTree.action.RunAllTestsAction">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        <action id="Bsp.ResyncAction" class="org.jetbrains.bazel.action.registered.ResyncAction"
                icon="/icons/resync.svg"/>
        <action id="Bsp.BuildAndResyncAction"
                class="org.jetbrains.bazel.action.registered.BuildAndResyncAction"
                icon="/icons/buildAndResync.svg"/>
        <action id="Bsp.Compile.CompileProjectWithBspAction"
                class="org.jetbrains.bazel.action.registered.CompileProjectWithBspAction"
                icon="AllIcons.Actions.Compile"/>
        <action id="Bsp.Compile.CompileProjectWithJpsAction"
                class="org.jetbrains.bazel.action.registered.CompileProjectWithJpsAction"
                icon="AllIcons.Actions.Compile"/>

        <group id="Bsp.ActionsToolbar">
            <reference id="Bsp.ResyncAction"/>
            <reference id="Bsp.BuildAndResyncAction"/>
        </group>

    </actions>

    <applicationListeners>

        <listener class="org.jetbrains.bazel.workspace.AssignFileToModuleListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    </applicationListeners>

    <extensions defaultExtensionNs="org.jetbrains.bazel">
        <toolWindowConfigFileProviderExtension
                implementation="org.jetbrains.bazel.extension.BazelToolWindowConfigFileProviderExtension"/>

        <projectModelExternalSource
                implementation="org.jetbrains.bazel.extension.BazelProjectModelExternalSourceExtension"/>

        <projectAwareExtension
                implementation="org.jetbrains.bazel.flow.open.BazelBspProjectAwareExtension"/>

        <projectPreSyncHook implementation="org.jetbrains.bazel.flow.open.RegenerateProjectViewFileContentPreSyncHook"/>

        <projectSyncHook implementation="org.jetbrains.bazel.services.InvalidTargetsProjectSyncHook"/>
        <!-- Must be last because of DirectoriesSyncHook#removeExcludedVcsMappings -->
        <projectSyncHook implementation="org.jetbrains.bazel.flow.sync.DirectoriesSyncHook" order="last"/>
        <projectSyncHook implementation="org.jetbrains.bazel.languages.starlark.repomapping.BazelRepoMappingSyncHook"/>
        <featureFlagsProvider implementation="org.jetbrains.bazel.config.BazelBspFeatureFlagsProvider"/>
        <additionalProjectTaskRunnerProvider
                implementation="org.jetbrains.bazel.hotswap.BazelHotSwapProjectTaskRunnerProvider"/>

    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <consoleFilterProvider implementation="org.jetbrains.bazel.ui.console.BazelBuildTargetConsoleFilterProvider"/>

        <attachSourcesProvider implementation="org.jetbrains.bazel.ui.notifications.BazelAttachSourcesProvider"/>
        <projectOpenProcessor
                implementation="org.jetbrains.bazel.flow.open.BazelBspProjectOpenProcessor"/>
        <postStartupActivity
                implementation="org.jetbrains.bazel.flow.open.SuggestEnableK2StartupActivity"/>
        <postStartupActivity
                implementation="org.jetbrains.bazel.flow.open.OpenBrokenBazelProjectStartupActivity"/>
        <notificationGroup displayType="BALLOON" id="Enable K2 Compiler Mode with Bazel"/>
        <notificationGroup displayType="BALLOON" id="Bazel slow plugins warning"/>

        <externalSystemUnlinkedProjectAware
                id="Bazel"
                implementation="org.jetbrains.bazel.flow.open.BazelBspUnlinkedProjectAware"/>
        <directoryProjectConfigurator
                implementation="org.jetbrains.bazel.flow.open.exclude.BazelSymlinkExcludeDirectoryProjectConfigurator"
                order="after PlatformProjectConfigurator"/>
        <externalIconProvider
                key="bazelbsp"
                implementationClass="org.jetbrains.bazel.flow.open.BazelExternalSystemIconProvider"/>
        <projectModelModifier implementation="org.jetbrains.bazel.flow.modify.BazelProjectModelModifier"/>

        <fileType
                name="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.StarlarkFileType"
                fieldName="INSTANCE"
                language="Starlark"
                fileNames="BUILD;WORKSPACE"
                extensions="bzl;bazel;bzlmod"
                patterns="*.bzl.template"/>
        <lang.fileViewProviderFactory
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.psi.StarlarkViewProviderFactory"/>
        <enterBetweenBracesDelegate
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.indentation.StarlarkEnterBetweenBracesHandler"/>
        <lang.parserDefinition
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.parser.StarlarkParserDefinition"/>
        <lang.syntaxHighlighterFactory
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.highlighting.StarlarkSyntaxHighlighterFactory"/>
        <lang.commenter
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.commenter.StarlarkCommenter"/>
        <lang.braceMatcher
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.matching.StarlarkBraceMatcher"/>
        <lang.quoteHandler
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.matching.StarlarkQuoteHandler"/>
        <lang.findUsagesProvider
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.findusages.StarlarkFindUsagesProvider"/>
        <lang.foldingBuilder language="Starlark"
                             implementationClass="org.jetbrains.bazel.languages.starlark.folding.StarlarkFoldingBuilder"/>
        <lineIndentProvider
                implementation="org.jetbrains.bazel.languages.starlark.indentation.StarlarkLineIndentProvider"/>
        <colorSettingsPage
                implementation="org.jetbrains.bazel.languages.starlark.highlighting.StarlarkColorSettingsPage"/>
        <additionalTextAttributes
                scheme="Default"
                file="colorSchemes/StarlarkDefault.xml"/>
        <additionalTextAttributes
                scheme="Darcula"
                file="colorSchemes/StarlarkDarcula.xml"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkDeclarationAnnotator"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkFunctionAnnotator"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkStringAnnotator"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkLoadAnnotator"/>
        <completion.confidence
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.StarlarkCompletionConfidence"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.BazelGlobalFunctionCompletionContributor"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.StarlarkParamsCompletionContributor"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.StarlarkArgumentCompletionContributor"/>
        <editorTabTitleProvider
                implementation="org.jetbrains.bazel.ui.tabs.BazelEditorTabTitleProvider"/>
        <extendWordSelectionHandler
                implementation="org.jetbrains.bazel.languages.starlark.actions.StarlarkStringLiteralSelectioner"/>
        <fileType
                name="ProjectView"
                implementationClass="org.jetbrains.bazel.languages.projectview.base.ProjectViewFileType"
                fieldName="INSTANCE"
                language="ProjectView"
                extensions="bazelproject"/>
        <lang.syntaxHighlighterFactory
                language="ProjectView"
                implementationClass="org.jetbrains.bazel.languages.projectview.highlighting.ProjectViewSyntaxHighlighterFactory"/>

        <formattingService
                implementation="org.jetbrains.bazel.languages.starlark.formatting.StarlarkFormattingService"/>

        <runLineMarkerContributor implementationClass="org.jetbrains.bazel.ui.gutters.StarlarkRunLineMarkerContributor"
                                  language="Starlark"/>

        <fileType
                name="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.BazelrcFileType"
                fieldName="INSTANCE"
                language="Bazelrc"
                fileNames=".bazelrc"
                extensions="bazelrc"
        />

        <lang.syntaxHighlighterFactory
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.highlighting.BazelrcSyntaxHighlighterFactory"/>

        <lang.parserDefinition
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.parser.BazelrcParserDefinition"/>

        <lang.commenter
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.commenter.BazelrcCommenter"/>

        <lang.quoteHandler
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.matching.BazelrcQuoteHandler"/>

        <annotator
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.annotation.BazelrcFlagAnnotator"/>

        <completion.contributor
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.completion.BazelrcCompletionContributor"/>

        <projectConfigurable
                parentId="build.tools"
                id="bazel.project.settings"
                displayName="Bazel"
                instance="org.jetbrains.bazel.ui.settings.BazelProjectSettingsConfigurable"
                provider="org.jetbrains.bazel.ui.settings.BazelProjectSettingsConfigurableProvider">
            <configurable
                    instance="org.jetbrains.bazel.languages.starlark.formatting.configuration.BuildifierConfigurable"
                    provider="org.jetbrains.bazel.languages.starlark.formatting.configuration.BuildifierConfigurableProvider"
                    displayName="Buildifier"/>
        </projectConfigurable>

        <applicationConfigurable
                parentId="bazel.project.settings"
                id="bazel.application.settings"
                displayName="Advanced Settings"
                instance="org.jetbrains.bazel.ui.settings.BazelApplicationSettingsConfigurable"
                provider="org.jetbrains.bazel.ui.settings.BazelApplicationSettingsConfigurableProvider"
        />

        <projectViewNodeDecorator
                implementation="org.jetbrains.bazel.settings.ProjectViewFileNodeDecorator"/>
        <referencesSearch
                implementation="org.jetbrains.bazel.languages.starlark.findusages.StarlarkStringUsageSearcher"/>
        <usageTypeProvider
                implementation="org.jetbrains.bazel.languages.starlark.findusages.StarlarkUsageTypeProvider"/>

        <xdebugger.breakpointType implementation="org.jetbrains.bazel.debug.platform.StarlarkBreakpointType"/>
        <programRunner implementation="org.jetbrains.bazel.debug.configuration.StarlarkDebugRunner"/>

        <registryKey defaultValue="25"
                     description="Maximum number of attempts to connect with the Starlark debugger socket"
                     key="bazel.starlark.debug.socket.attempts"/>
        <registryKey defaultValue="400"
                     description="Interval (in milliseconds) between attempts to connect with the Starlark debugger socket"
                     key="bazel.starlark.debug.socket.interval"/>
        <registryKey defaultValue="2"
                     description="How many levels to go down when scanning the project for Bazel symlinks to exclude"
                     key="bazel.symlink.scan.max.depth"/>
        <registryKey defaultValue="true"
                     description="Force Bazel to shut down before each shard build to prevent Bazel memory leak issue"
                     key="bazel.shutdown.before.shard.build"/>
        <configurationType implementation="org.jetbrains.bazel.run.BazelRunConfigurationType"/>

        <search.optionContributor implementation="org.jetbrains.bazel.ui.settings.BazelSearchOptionsContributor"/>
    </extensions>

    <actions>
        <action class="org.jetbrains.bazel.settings.LoadProjectViewFileAction"
                icon="/icons/bazel.svg">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>

        <action class="org.jetbrains.bazel.ui.widgets.CopyTargetIdAction"
                icon="/icons/bazel.svg">
            <add-to-group group-id="EditorPopupMenu"/>
            <!-- This shortcut doesn't mean anything, it's just not taken by anyone and is easy to type -->
            <keyboard-shortcut first-keystroke="control alt G" second-keystroke="H" keymap="$default"/>
        </action>

        <action class="org.jetbrains.bazel.ui.widgets.BazelBspJumpToBuildFileAction">
            <add-to-group group-id="EditorPopupMenu"/>
            <keyboard-shortcut first-keystroke="control alt G" second-keystroke="J" keymap="$default"/>
        </action>

        <action id="Bazel.ImportExternalProject"
                class="org.jetbrains.bazel.flow.open.actions.LinkBazelProjectFromScriptAction">
            <add-to-group group-id="ProjectViewPopupMenuSettingsGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </action>

    </actions>
</idea-plugin>
