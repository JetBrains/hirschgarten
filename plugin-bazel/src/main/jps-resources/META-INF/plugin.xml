<idea-plugin>
    <id>org.jetbrains.bazel</id>
    <vendor>JetBrains</vendor>
    <name>Bazel (EAP)</name>
    <description><![CDATA[
  <p>Bazel by JetBrains (EAP) for IntelliJ IDEA</p>

  <p>This plugin is available as EAP (Early Access Program). This means that it may already be useful, but many
  corner cases might not be supported yet.</p>

  <p>Main features</p>
  <ul>
      <li>Open Bazel projects in IntelliJ IDEA</li>
      <li>Supports Java and Kotlin</li>
      <li>Build, run, test, debug Bazel targets</li>
      <li>Starlark syntax, completion, navigation support</li>
      <li>Starlark debugging</li>
      <li>Run and debug tests running in Bazel</li>
  </ul>

  <p>To learn more about how to use the features, please check <a href="https://www.jetbrains.com/help/idea/2024.3/bazel.html">the documentation page</a>.</p>
  ]]>
    </description>

    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.platform</depends>

    <depends optional="true" config-file="withAndroid.xml">org.jetbrains.android</depends>
    <depends optional="true" config-file="withCodeWithMe.xml">com.jetbrains.codeWithMe</depends>
    <depends optional="true" config-file="withCoverage.xml">com.intellij.modules.coverage</depends>
    <depends optional="true" config-file="withCpp.xml">com.intellij.clion</depends>
    <depends optional="true" config-file="withDevKit.xml">DevKit</depends>
    <depends optional="true" config-file="withGo.xml">org.jetbrains.plugins.go</depends>
    <depends optional="true" config-file="withIdeStarter.xml">com.jetbrains.performancePlugin</depends>
    <depends optional="true" config-file="withKotlin.xml">org.jetbrains.kotlin</depends>
    <depends optional="true" config-file="withPython.xml">com.intellij.modules.python</depends>
    <depends optional="true" config-file="withJunit.xml">JUnit</depends>

    <extensionPoints>
        <extensionPoint qualifiedName="org.jetbrains.bazel.sourceTypeIconProvider"
                        interface="org.jetbrains.bazel.utils.SourceTypeIconProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.scalaSdkExtension"
                        interface="org.jetbrains.bazel.scala.sdk.ScalaSdkExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.androidSdkGetterExtension"
                        interface="org.jetbrains.bazel.android.AndroidSdkGetterExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.androidFacetEntityUpdaterExtension"
                        interface="org.jetbrains.bazel.magicmetamodel.impl.workspacemodel.impl.updaters.AndroidFacetEntityUpdaterExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.runHandlerProvider"
                        interface="org.jetbrains.bazel.run.RunHandlerProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectAwareExtension"
                        interface="org.jetbrains.bazel.projectAware.ProjectAwareExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.connectionDetailsProviderExtension"
                        interface="org.jetbrains.bazel.server.connection.ConnectionDetailsProviderExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.connectionDetailsProviderExtensionJavaShim"
                        interface="org.jetbrains.bazel.server.connection.ConnectionDetailsProviderExtensionJavaShim"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.toolWindowConfigFileProviderExtension"
                        interface="org.jetbrains.bazel.extensionPoints.ToolWindowConfigFileProviderExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectModelExternalSource"
                        interface="org.jetbrains.bazel.extensionPoints.ProjectModelExternalSourceExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.runConfigurationExtension"
                        interface="org.jetbrains.bazel.run.config.RunConfigurationExtensionManager"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.invalidTargetsProviderExtension"
                        interface="org.jetbrains.bazel.services.InvalidTargetsProviderExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectSyncHook"
                        interface="org.jetbrains.bazel.sync.ProjectSyncHook"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectPreSyncHook"
                        interface="org.jetbrains.bazel.sync.ProjectPreSyncHook"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectPostSyncHook"
                        interface="org.jetbrains.bazel.sync.ProjectPostSyncHook"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.projectStructureProvider"
                        interface="org.jetbrains.bazel.sync.projectStructure.ProjectStructureProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.additionalProjectTaskRunnerProvider"
                        interface="org.jetbrains.bazel.buildTask.AdditionalProjectTaskRunnerProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.treeStructureSettingsExtension"
                        interface="org.jetbrains.bazel.ui.projectTree.TreeStructureSettingsProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.jvmBinaryJarsExtension"
                        interface="org.jetbrains.bazel.extensionPoints.JvmBinaryJarsExtension"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.localJvmRunnerRunConfigurationProvider"
                        interface="org.jetbrains.bazel.runnerAction.LocalJvmRunnerRunConfigurationProvider"
                        dynamic="true"/>
        <extensionPoint qualifiedName="org.jetbrains.bazel.kotlinFacetEntityUpdater"
                        interface="org.jetbrains.bazel.magicmetamodel.impl.workspacemodel.impl.updaters.KotlinFacetEntityUpdater"
                        dynamic="true"/>
    </extensionPoints>

    <!-- it needs to be here, not in withKotlin.xml because plugin loader checks only this file -->
    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <supportsKotlinPluginMode supportsK1="true" supportsK2="true"/>
    </extensions>

    <extensions defaultExtensionNs="org.jetbrains.bazel">
        <runHandlerProvider implementation="org.jetbrains.bazel.jvm.run.JvmRunHandler$JvmRunHandlerProvider"
                            id="JvmRunHandlerProvider"/>
        <runHandlerProvider
                implementation="org.jetbrains.bazel.jvm.run.JvmTestHandler$JvmTestHandlerProvider"
                id="JvmTestHandlerProvider"/>
        <runHandlerProvider implementation="org.jetbrains.bazel.run.handler.GenericRunHandlerProvider"
                            order="last"/>
        <runHandlerProvider implementation="org.jetbrains.bazel.run.handler.GenericTestHandlerProvider"
                            order="last"/>
        <!-- Dependency: JvmSyncHook -> TargetUtils#updateComputedFields -> toShortString -> BazelRepoMappingService -->
        <projectSyncHook implementation="org.jetbrains.bazel.jvm.sync.JvmSyncHook" order="after BazelRepoMappingSyncHook"/>
        <projectSyncHook implementation="org.jetbrains.bazel.flow.sync.PathSyncHook"/>
        <projectStructureProvider
                implementation="org.jetbrains.bazel.sync.projectStructure.workspaceModel.WorkspaceModelProjectStructureProvider"/>
        <sourceTypeIconProvider implementation="org.jetbrains.bazel.java.JavaSourceTypeIconProvider"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">

        <activityTracker implementation="org.jetbrains.bazel.startup.BazelStartupActivityTracker"/>

        <projectService serviceInterface="com.intellij.openapi.project.BaseProjectDirectories"
                        serviceImplementation="org.jetbrains.bazel.services.BazelBaseProjectDirectories"
                        overrides="true"/>
        <projectService serviceInterface="com.intellij.codeInsight.ExternalAnnotationsManager"
                        serviceImplementation="org.jetbrains.bazel.services.BazelExternalAnnotationsManager"
                        overrides="true"/>
        <moduleService serviceInterface="com.intellij.openapi.roots.ModuleFileIndex"
                       serviceImplementation="org.jetbrains.bazel.services.BazelModuleFileIndex"
                       overrides="true"/>

        <commandLineInspectionProjectConfigurator
                implementation="org.jetbrains.bazel.startup.BazelCommandLineInspectionConfigurator"/>
        <configurationType implementation="org.jetbrains.bazel.run.config.BazelRunConfigurationType"/>

        <notificationGroup id="Bazel" displayType="STICKY_BALLOON"/>

        <workspaceModel.fileIndexContributor
                implementation="org.jetbrains.bazel.workspace.BazelProjectDirectoriesWorkspaceFileIndexContributor"/>
        <workspaceModel.fileIndexContributor
                implementation="org.jetbrains.bazel.workspace.DummyModuleExclusionWorkspaceFileIndexContributor"/>
        <ignoredFileProvider implementation="org.jetbrains.bazel.workspace.BazelProjectExcludesIgnoredFileProvider"/>
        <workspaceModel.fileIndexContributor
                implementation="org.jetbrains.bazel.workspace.CompiledSourceCodeInsideJarExcludeWorkspaceFileIndexContributor"/>

        <java.programPatcher implementation="org.jetbrains.bazel.jvm.run.BazelJvmEnvironmentProgramPatcher"/>
        <java.elementFinder implementation="org.jetbrains.bazel.services.BazelJavaClassFinder"/>
        <useScopeEnlarger implementation="org.jetbrains.bazel.services.BazelJavaUseScopeEnlarger"/>

        <postStartupActivity
                implementation="org.jetbrains.bazel.startup.BazelStartupActivity"/>

        <treeStructureProvider implementation="org.jetbrains.bazel.ui.projectTree.BazelTreeStructureProvider"/>
        <projectViewNodeDecorator
                implementation="org.jetbrains.bazel.ui.projectTree.BazelProjectViewNodeDecorator"/>
        <projectTaskRunner
                implementation="org.jetbrains.bazel.buildTask.BazelProjectTaskRunner"/>
        <programRunner implementation="org.jetbrains.bazel.jvm.run.BazelJvmDebugRunner"/>

        <directoryProjectConfigurator
                implementation="org.jetbrains.bazel.flow.open.CounterPlatformProjectConfigurator"
                order="last"/>

        <!--    <projectService serviceInterface="com.intellij.openapi.roots.SingleFileSourcesTracker"-->
        <!--                    serviceImplementation="org.jetbrains.bazel.services.SingleFileSourcesTrackerImpl"-->
        <!--                    overrides="true"/>-->

        <runLineMarkerContributor
                implementationClass="org.jetbrains.bazel.jvm.ui.gutters.BazelJavaRunLineMarkerContributor"
                language="JVM"/>
        <registryKey defaultValue="false" description="Build project on initial project sync"
                     key="bsp.build.project.on.sync"/>
        <registryKey defaultValue="true" description="Python modules support" key="bsp.python.support"/>
        <registryKey defaultValue="false" description="Android modules support" key="bsp.android.support"/>
        <registryKey defaultValue="false" description="Go modules support" key="bsp.go.support"/>
        <registryKey defaultValue="true"
                     description="Shorten module/library names by hashing the first parts and retaining the others"
                     key="bsp.shorten.module.library.names"/>
        <registryKey defaultValue="false"
                     description="Wrap libraries inside modules to form a proper dependency graph between libraries. Enabled by default with K2 mode"
                     key="bsp.wrap.libraries.inside.modules"/>
        <registryKey defaultValue="true"
                     description="Execute second phase of the phased sync. `bsp.use.phased.sync` has to be enabled to use this flag. It should be used only for testing purposes."
                     key="bsp.execute.second.phase.on.sync"/>
        <registryKey defaultValue="true"
                     description="Add the so-called &quot;dummy&quot; modules to make Java resolve work correctly."
                     key="bsp.add.dummy.modules"/>
        <registryKey defaultValue="true"
                     description="Exclude class files inside jars (and source files inside source jars) if they match up with a source file in the current project."
                     key="bsp.exclude.compiled.source.code.inside.jars"/>
        <!-- https://youtrack.jetbrains.com/issue/BAZEL-1734 -->
        <registryKey defaultValue="false"
                     description="Enable partial sync action for a target."
                     key="bsp.enable.partial.sync"/>

        <statusBarWidgetFactory id="BazelFileTargetsWidget"
                                implementation="org.jetbrains.bazel.ui.widgets.fileTargets.BazelFileTargetsWidgetFactory"/>

        <toolWindowAllowlist id="Bazel"/>
        <toolWindowExtractor
                implementation="org.jetbrains.bazel.ui.widgets.tool.window.all.targets.BazelToolWindowViewModelExtractor"/>

        <consoleFilterProvider
                implementation="org.jetbrains.bazel.ui.console.filter.AbsoluteAndRelativePathsConsoleFilterProvider"/>

        <notificationGroup displayType="BALLOON" id="Bazel Plugin"/>
        <editorNotificationProvider
                implementation="org.jetbrains.bazel.ui.notifications.BuildAndResyncOnUnresolvedImportNotificationsProvider"/>

        <statistics.projectUsagesCollector implementation="org.jetbrains.plugins.bazel.fus.BazelProjectStatisticsCollector"/>

    </extensions>

    <actions>
        <action class="org.jetbrains.bazel.ui.projectTree.action.RunAllTestsAction" id="BazelRunAllTestsAction">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>
        <action id="Bazel.ResyncAction" class="org.jetbrains.bazel.action.registered.ResyncAction"
                icon="/icons/resync.svg"/>
        <action id="Bazel.BuildAndResyncAction"
                class="org.jetbrains.bazel.action.registered.BuildAndResyncAction"
                icon="/icons/buildAndResync.svg"/>
        <action id="Bazel.NewBazelPackageAction"
                class="org.jetbrains.bazel.action.registered.NewBazelPackageAction"
                text="New Bazel Package">
            <add-to-group group-id="NewGroup" relative-to-action="NewDir" anchor="after"/>
        </action>

        <group id="Bazel.ActionsToolbar">
            <reference id="Bazel.ResyncAction"/>
            <reference id="Bazel.BuildAndResyncAction"/>
        </group>

    </actions>

    <applicationListeners>

        <listener class="org.jetbrains.bazel.workspace.AssignFileToModuleListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    </applicationListeners>

    <extensions defaultExtensionNs="org.jetbrains.bazel">
        <toolWindowConfigFileProviderExtension
                implementation="org.jetbrains.bazel.extension.BazelToolWindowConfigFileProviderExtension"/>

        <projectModelExternalSource
                implementation="org.jetbrains.bazel.extension.BazelProjectModelExternalSourceExtension"/>

        <projectAwareExtension
                implementation="org.jetbrains.bazel.flow.open.BazelProjectAwareExtension"/>

        <projectPreSyncHook implementation="org.jetbrains.bazel.flow.open.RegenerateProjectViewFileContentPreSyncHook"/>

        <projectSyncHook implementation="org.jetbrains.bazel.services.InvalidTargetsProjectSyncHook"/>
        <!-- Must be last because of DirectoriesSyncHook#removeExcludedVcsMappings -->
        <projectSyncHook implementation="org.jetbrains.bazel.flow.sync.DirectoriesSyncHook" order="last"/>
        <projectSyncHook implementation="org.jetbrains.bazel.languages.starlark.repomapping.BazelRepoMappingSyncHook" id="BazelRepoMappingSyncHook"/>
        <projectSyncHook implementation="org.jetbrains.bazel.run.import.ImportRunConfigurationsSyncHook"/>

        <projectPostSyncHook implementation="org.jetbrains.bazel.ui.widgets.fileTargets.BazelFileTargetsWidgetSyncHook"/>

        <additionalProjectTaskRunnerProvider
                implementation="org.jetbrains.bazel.hotswap.BazelHotSwapProjectTaskRunnerProvider"/>

    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <disableCompilationDependenciesResolutionTask
                implementation="org.jetbrains.bazel.jpsCompilation.utils.DisableCompilationDependenciesResolutionImpl"/>
        <projectService serviceInterface="org.jetbrains.bazel.server.connection.BazelServerService"
                        serviceImplementation="org.jetbrains.bazel.server.connection.BazelServerServiceImpl"/>

        <consoleFilterProvider implementation="org.jetbrains.bazel.ui.console.BazelBuildTargetConsoleFilterProvider"/>

        <attachSourcesProvider implementation="org.jetbrains.bazel.ui.notifications.BazelAttachSourcesProvider"/>
        <projectOpenProcessor
                implementation="org.jetbrains.bazel.flow.open.BazelProjectOpenProcessor"/>
        <postStartupActivity
                implementation="org.jetbrains.bazel.flow.open.OpenBrokenBazelProjectStartupActivity"/>
        <notificationGroup displayType="BALLOON" id="Bazel slow plugins warning"/>

        <externalSystemUnlinkedProjectAware
                id="Bazel"
                implementation="org.jetbrains.bazel.flow.open.BazelUnlinkedProjectAware"/>
        <directoryProjectConfigurator
                implementation="org.jetbrains.bazel.flow.open.exclude.BazelSymlinkExcludeDirectoryProjectConfigurator"
                order="after PlatformProjectConfigurator"/>
        <externalIconProvider
                key="bazel"
                implementationClass="org.jetbrains.bazel.flow.open.BazelExternalSystemIconProvider"/>
        <projectModelModifier implementation="org.jetbrains.bazel.flow.modify.BazelProjectModelModifier"/>

        <fileType
                name="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.StarlarkFileType"
                fieldName="INSTANCE"
                language="Starlark"
                fileNames="BUILD;WORKSPACE"
                extensions="bzl;bazel;bzlmod"
                patterns="*.bzl.template"/>
        <lang.fileViewProviderFactory
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.psi.StarlarkViewProviderFactory"/>
        <enterBetweenBracesDelegate
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.indentation.StarlarkEnterBetweenBracesHandler"/>
        <lang.parserDefinition
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.parser.StarlarkParserDefinition"/>
        <lang.syntaxHighlighterFactory
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.highlighting.StarlarkSyntaxHighlighterFactory"/>
        <lang.commenter
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.commenter.StarlarkCommenter"/>
        <lang.braceMatcher
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.matching.StarlarkBraceMatcher"/>
        <lang.quoteHandler
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.matching.StarlarkQuoteHandler"/>
        <lang.findUsagesProvider
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.findusages.StarlarkFindUsagesProvider"/>
        <lang.foldingBuilder language="Starlark"
                             implementationClass="org.jetbrains.bazel.languages.starlark.folding.StarlarkFoldingBuilder"/>
        <lineIndentProvider
                implementation="org.jetbrains.bazel.languages.starlark.indentation.StarlarkLineIndentProvider"/>
        <colorSettingsPage
                implementation="org.jetbrains.bazel.languages.starlark.highlighting.StarlarkColorSettingsPage"/>
        <additionalTextAttributes
                scheme="Default"
                file="colorSchemes/StarlarkDefault.xml"/>
        <additionalTextAttributes
                scheme="Darcula"
                file="colorSchemes/StarlarkDarcula.xml"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkDeclarationAnnotator"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkFunctionAnnotator"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkStringAnnotator"/>
        <annotator
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.annotation.StarlarkLoadAnnotator"/>
        <completion.confidence
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.StarlarkCompletionConfidence"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.BazelGlobalFunctionCompletionContributor"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.StarlarkParamsCompletionContributor"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.StarlarkArgumentCompletionContributor"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.BazelNativeRulesCompletionContributor"/>
        <completion.contributor
                language="Starlark"
                implementationClass="org.jetbrains.bazel.languages.starlark.completion.BazelNativeRulesArgumentCompletionContributor"/>
        <editorTabTitleProvider
                implementation="org.jetbrains.bazel.ui.tabs.BazelEditorTabTitleProvider"/>
        <extendWordSelectionHandler
                implementation="org.jetbrains.bazel.languages.starlark.actions.StarlarkStringLiteralSelectioner"/>
        <fileType
                name="ProjectView"
                implementationClass="org.jetbrains.bazel.languages.projectview.base.ProjectViewFileType"
                fieldName="INSTANCE"
                language="ProjectView"
                extensions="bazelproject"/>
        <lang.syntaxHighlighterFactory
                language="ProjectView"
                implementationClass="org.jetbrains.bazel.languages.projectview.highlighting.ProjectViewSyntaxHighlighterFactory"/>
        <lang.commenter
                language="ProjectView"
                implementationClass="org.jetbrains.bazel.languages.projectview.commenter.ProjectViewCommenter"/>
        <langCodeStyleSettingsProvider
                implementation="org.jetbrains.bazel.languages.projectview.formatting.ProjectViewLanguageCodeStyleSettingsProvider"/>
        <enterHandlerDelegate implementation="org.jetbrains.bazel.languages.projectview.formatting.ProjectViewEnterHandler" />
        <lang.parserDefinition
                language="ProjectView"
                implementationClass="org.jetbrains.bazel.languages.projectview.parser.ProjectViewParserDefinition"/>

        <formattingService
                implementation="org.jetbrains.bazel.languages.starlark.formatting.StarlarkFormattingService"/>
        <actionOnSave id="StarlarkFormattingActionOnSave"
                      implementation="org.jetbrains.bazel.languages.starlark.formatting.StarlarkFormattingActionOnSave"/>

        <runLineMarkerContributor implementationClass="org.jetbrains.bazel.ui.gutters.StarlarkRunLineMarkerContributor"
                                  language="Starlark"/>

        <fileType
                name="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.BazelrcFileType"
                fieldName="INSTANCE"
                language="Bazelrc"
                fileNames=".bazelrc"
                extensions="bazelrc"
        />

        <lang.syntaxHighlighterFactory
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.highlighting.BazelrcSyntaxHighlighterFactory"/>

        <lang.parserDefinition
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.parser.BazelrcParserDefinition"/>

        <lang.commenter
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.commenter.BazelrcCommenter"/>

        <lang.quoteHandler
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.matching.BazelrcQuoteHandler"/>

        <annotator
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.annotation.BazelrcFlagAnnotator"/>

        <completion.contributor
                language="Bazelrc"
                implementationClass="org.jetbrains.bazel.languages.bazelrc.completion.BazelrcCompletionContributor"/>

        <projectConfigurable
                parentId="build.tools"
                id="bazel.project.settings"
                displayName="Bazel"
                instance="org.jetbrains.bazel.ui.settings.BazelProjectSettingsConfigurable"
                provider="org.jetbrains.bazel.ui.settings.BazelProjectSettingsConfigurableProvider">
            <configurable
                    id="bazel.experimental.project.settings"
                    displayName="Experimental Settings"
                    instance="org.jetbrains.bazel.ui.settings.BazelExperimentalProjectSettingsConfigurable"
                    provider="org.jetbrains.bazel.ui.settings.BazelExperimentalProjectSettingsConfigurableProvider"/>
        </projectConfigurable>

        <applicationConfigurable
                parentId="bazel.project.settings"
                id="bazel.application.settings"
                displayName="Advanced Settings"
                instance="org.jetbrains.bazel.ui.settings.BazelApplicationSettingsConfigurable"
                provider="org.jetbrains.bazel.ui.settings.BazelApplicationSettingsConfigurableProvider"
        />

        <projectViewNodeDecorator
                implementation="org.jetbrains.bazel.settings.ProjectViewFileNodeDecorator"/>
        <referencesSearch
                implementation="org.jetbrains.bazel.languages.starlark.findusages.StarlarkStringUsageSearcher"/>
        <usageTypeProvider
                implementation="org.jetbrains.bazel.languages.starlark.findusages.StarlarkUsageTypeProvider"/>

        <xdebugger.breakpointType implementation="org.jetbrains.bazel.debug.platform.StarlarkBreakpointType"/>
        <programRunner implementation="org.jetbrains.bazel.debug.configuration.StarlarkDebugRunner"/>

        <registryKey defaultValue="25"
                     description="Maximum number of attempts to connect with the Starlark debugger socket"
                     key="bazel.starlark.debug.socket.attempts"/>
        <registryKey defaultValue="400"
                     description="Interval (in milliseconds) between attempts to connect with the Starlark debugger socket"
                     key="bazel.starlark.debug.socket.interval"/>
        <registryKey defaultValue="2"
                     description="How many levels to go down when scanning the project for Bazel symlinks to exclude"
                     key="bazel.symlink.scan.max.depth"/>
        <registryKey defaultValue="true"
                     description="Force Bazel to shut down before each shard build to prevent Bazel memory leak issue"
                     key="bazel.shutdown.before.shard.build"/>
        <registryKey defaultValue="false"
                     description="Enable a custom class finder for Java instead of &quot;dummy&quot; modules"
                     key="bazel.enable.custom.java.class.finder"/>
        <registryKey defaultValue="true"
                     description="Add the whole directory to IntelliJ project model instead of individual files when it's possible"
                     key="bazel.merge.source.roots"/>
        <search.optionContributor implementation="org.jetbrains.bazel.ui.settings.BazelSearchOptionsContributor"/>
        <searchEverywhereContributor implementation="org.jetbrains.bazel.ui.widgets.LabelSearchEverywhereContributor$Factory"/>

        <newProjectWizard.java.buildSystem implementation="org.jetbrains.bazel.ui.starters.BazelJavaNewProjectWizard"/>
    </extensions>

    <actions>
        <action class="org.jetbrains.bazel.settings.LoadProjectViewFileAction"
                icon="/icons/bazel.svg">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
        </action>

        <action class="org.jetbrains.bazel.ui.widgets.CopyTargetIdAction"
                icon="/icons/bazel.svg">
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <!-- This shortcut doesn't mean anything, it's just not taken by anyone and is easy to type -->
            <keyboard-shortcut first-keystroke="control alt G" second-keystroke="H" keymap="$default"/>
        </action>

        <action class="org.jetbrains.bazel.ui.widgets.BazelJumpToBuildFileAction">
            <add-to-group group-id="EditorPopupMenu"/>
            <add-to-group group-id="EditorTabPopupMenu"/>
            <keyboard-shortcut first-keystroke="control alt G" second-keystroke="J" keymap="$default"/>
        </action>

        <action id="Bazel.ImportExternalProject"
                class="org.jetbrains.bazel.flow.open.actions.LinkBazelProjectFromScriptAction">
            <add-to-group group-id="ProjectViewPopupMenuSettingsGroup" anchor="last"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </action>

    </actions>
</idea-plugin>
