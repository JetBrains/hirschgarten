// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: third_party/bazel/src/main/java/com/google/devtools/build/lib/packages/metrics/package_load_metrics.proto
// Protobuf Java Version: 4.29.4

package com.google.devtools.build.lib.packages.metrics;

public interface PackageLoadMetricsOrBuilder extends
    // @@protoc_insertion_point(interface_extends:devtools.build.lib.packages.metrics.PackageLoadMetrics)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the package.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return Whether the name field is set.
   */
  boolean hasName();
  /**
   * <pre>
   * Name of the package.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Name of the package.
   * </pre>
   *
   * <code>optional string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Wall-time duration it took to construct the package.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration load_duration = 2;</code>
   * @return Whether the loadDuration field is set.
   */
  boolean hasLoadDuration();
  /**
   * <pre>
   * Wall-time duration it took to construct the package.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration load_duration = 2;</code>
   * @return The loadDuration.
   */
  com.google.protobuf.Duration getLoadDuration();
  /**
   * <pre>
   * Wall-time duration it took to construct the package.
   * </pre>
   *
   * <code>optional .google.protobuf.Duration load_duration = 2;</code>
   */
  com.google.protobuf.DurationOrBuilder getLoadDurationOrBuilder();

  /**
   * <pre>
   * Number of targets created in the package.
   * </pre>
   *
   * <code>optional uint64 num_targets = 3;</code>
   * @return Whether the numTargets field is set.
   */
  boolean hasNumTargets();
  /**
   * <pre>
   * Number of targets created in the package.
   * </pre>
   *
   * <code>optional uint64 num_targets = 3;</code>
   * @return The numTargets.
   */
  long getNumTargets();

  /**
   * <pre>
   * Number of Starlark computation steps required to create the package.
   * </pre>
   *
   * <code>optional uint64 computation_steps = 4;</code>
   * @return Whether the computationSteps field is set.
   */
  boolean hasComputationSteps();
  /**
   * <pre>
   * Number of Starlark computation steps required to create the package.
   * </pre>
   *
   * <code>optional uint64 computation_steps = 4;</code>
   * @return The computationSteps.
   */
  long getComputationSteps();

  /**
   * <pre>
   * Number of transitive Starlark load()s required to create the package.
   * </pre>
   *
   * <code>optional uint64 num_transitive_loads = 5;</code>
   * @return Whether the numTransitiveLoads field is set.
   */
  boolean hasNumTransitiveLoads();
  /**
   * <pre>
   * Number of transitive Starlark load()s required to create the package.
   * </pre>
   *
   * <code>optional uint64 num_transitive_loads = 5;</code>
   * @return The numTransitiveLoads.
   */
  long getNumTransitiveLoads();

  /**
   * <pre>
   * Numeric value given to the memory and general accounting costs associated
   * with a loaded package. Values are an approximate but reasonable proxy for
   * the real storage costs of a package.
   * </pre>
   *
   * <code>optional uint64 package_overhead = 6;</code>
   * @return Whether the packageOverhead field is set.
   */
  boolean hasPackageOverhead();
  /**
   * <pre>
   * Numeric value given to the memory and general accounting costs associated
   * with a loaded package. Values are an approximate but reasonable proxy for
   * the real storage costs of a package.
   * </pre>
   *
   * <code>optional uint64 package_overhead = 6;</code>
   * @return The packageOverhead.
   */
  long getPackageOverhead();
}
